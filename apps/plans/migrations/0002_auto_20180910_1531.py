# Generated by Django 2.0.7 on 2018-09-10 21:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_symptom'),
        ('plans', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentTaskTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_on_day', models.IntegerField()),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('every_other_day', 'Every Other Day'), ('weekly', 'Weekly'), ('weekdays', 'Weekdays'), ('weekends', 'Weekends')], default='once', max_length=20)),
                ('repeat_amount', models.IntegerField(default=-1, help_text="\n        Only matters if frequency is not 'once'.\n        If it is below 0, it will repeat until the plan ends\n        ")),
                ('appear_time', models.TimeField()),
                ('due_time', models.TimeField()),
                ('tracks_outcome', models.BooleanField(default=False)),
                ('tracks_satisfaction', models.BooleanField(default=False)),
                ('plan_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_tasks', to='plans.CarePlanTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SymptomRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Symptom')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SymptomTaskInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appear_datetime', models.DateTimeField()),
                ('due_datetime', models.DateTimeField()),
                ('comments', models.CharField(max_length=1024)),
                ('plan_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.CarePlanInstance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SymptomTaskTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_on_day', models.IntegerField()),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('every_other_day', 'Every Other Day'), ('weekly', 'Weekly'), ('weekdays', 'Weekdays'), ('weekends', 'Weekends')], default='once', max_length=20)),
                ('repeat_amount', models.IntegerField(default=-1, help_text="\n        Only matters if frequency is not 'once'.\n        If it is below 0, it will repeat until the plan ends\n        ")),
                ('appear_time', models.TimeField()),
                ('due_time', models.TimeField()),
                ('plan_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='symptom_tasks', to='plans.CarePlanTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeamTaskInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appear_datetime', models.DateTimeField()),
                ('due_datetime', models.DateTimeField()),
                ('plan_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.CarePlanInstance')),
                ('team_task_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.TeamTaskTemplate')),
            ],
            options={
                'ordering': ('plan_instance', 'team_task_template', 'due_datetime'),
            },
        ),
        migrations.AddField(
            model_name='symptomtaskinstance',
            name='symptom_task_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.SymptomTaskTemplate'),
        ),
        migrations.AddField(
            model_name='symptomrating',
            name='symptom_task_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.SymptomTaskInstance'),
        ),
    ]
