# Generated by Django 2.0.7 on 2018-09-06 19:11

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0003_employeeprofile_status'),
        ('patients', '0003_remove_patientmedication_refills'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarePlanInstance',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='care_plans', to='patients.PatientProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarePlanTemplate',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(choices=[('rpm', 'Remote Patient Management'), ('bhi', 'Behavioral Health Initiative'), ('cocm', 'Psychiatric Collaberative Care Management'), ('ccm', 'Chronic Care Management'), ('cccm', 'Complex Chronic Care Management'), ('tcm', 'Transitional Care Management')], max_length=10)),
                ('duration_weeks', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CareTeamMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('employee_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_roles', to='core.EmployeeProfile')),
                ('plan_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='care_team_members', to='plans.CarePlanInstance')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ProviderRole')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoalTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=140)),
                ('description', models.CharField(max_length=240)),
                ('focus', models.CharField(max_length=140)),
                ('start_on_day', models.IntegerField()),
                ('duration_weeks', models.IntegerField(help_text='If below 0, the goal will continue until the plan ends.')),
                ('plan_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='plans.CarePlanTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfoMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfoMessageQueue',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(choices=[('education', 'Education'), ('support', 'Support'), ('medication', 'Medication')], max_length=40)),
                ('plan_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_message_queues', to='plans.CarePlanTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicationTaskInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appear_datetime', models.DateTimeField()),
                ('due_datetime', models.DateTimeField()),
                ('status', models.CharField(choices=[('undefined', 'Undefined'), ('missed', 'Missed'), ('done', 'Done')], default='undefined', max_length=12)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MedicationTaskTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_on_day', models.IntegerField()),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('every_other_day', 'Every Other Day'), ('weekly', 'Weekly'), ('weekdays', 'Weekdays'), ('weekends', 'Weekends')], default='once', max_length=20)),
                ('repeat_amount', models.IntegerField(default=-1, help_text="\n        Only matters if frequency is not 'once'.\n        If it is below 0, it will repeat until the plan ends\n        ")),
                ('appear_time', models.TimeField()),
                ('due_time', models.TimeField()),
                ('patient_medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patients.PatientMedication')),
                ('plan_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.CarePlanInstance')),
            ],
            options={
                'ordering': ('plan_instance', 'patient_medication'),
            },
        ),
        migrations.CreateModel(
            name='PatientTaskInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appear_datetime', models.DateTimeField()),
                ('due_datetime', models.DateTimeField()),
                ('status', models.CharField(choices=[('undefined', 'Undefined'), ('missed', 'Missed'), ('done', 'Done')], default='undefined', max_length=12)),
            ],
            options={
                'ordering': ('plan_instance', 'patient_task_template', 'due_datetime'),
            },
        ),
        migrations.CreateModel(
            name='PatientTaskTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_on_day', models.IntegerField()),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('every_other_day', 'Every Other Day'), ('weekly', 'Weekly'), ('weekdays', 'Weekdays'), ('weekends', 'Weekends')], default='once', max_length=20)),
                ('repeat_amount', models.IntegerField(default=-1, help_text="\n        Only matters if frequency is not 'once'.\n        If it is below 0, it will repeat until the plan ends\n        ")),
                ('appear_time', models.TimeField()),
                ('due_time', models.TimeField()),
                ('name', models.CharField(max_length=140)),
                ('plan_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_tasks', to='plans.CarePlanTemplate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanConsent',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('verbal_consent', models.BooleanField(default=False)),
                ('discussed_co_pay', models.BooleanField(default=False)),
                ('seen_within_year', models.BooleanField(default=False)),
                ('will_use_mobile_app', models.BooleanField(default=False)),
                ('will_interact_with_team', models.BooleanField(default=False)),
                ('will_complete_tasks', models.BooleanField(default=False)),
                ('plan_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.CarePlanInstance')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='TeamTaskTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_on_day', models.IntegerField()),
                ('frequency', models.CharField(choices=[('once', 'Once'), ('daily', 'Daily'), ('every_other_day', 'Every Other Day'), ('weekly', 'Weekly'), ('weekdays', 'Weekdays'), ('weekends', 'Weekends')], default='once', max_length=20)),
                ('repeat_amount', models.IntegerField(default=-1, help_text="\n        Only matters if frequency is not 'once'.\n        If it is below 0, it will repeat until the plan ends\n        ")),
                ('appear_time', models.TimeField()),
                ('due_time', models.TimeField()),
                ('name', models.CharField(max_length=140)),
                ('is_manager_task', models.BooleanField(default=False)),
                ('category', models.CharField(choices=[('notes', 'Notes'), ('interaction', 'Patient Interaction'), ('coordination', 'Care Team Coordination')], max_length=120)),
                ('plan_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_tasks', to='plans.CarePlanTemplate')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.ProviderRole')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='patienttaskinstance',
            name='patient_task_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.PatientTaskTemplate'),
        ),
        migrations.AddField(
            model_name='patienttaskinstance',
            name='plan_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.CarePlanInstance'),
        ),
        migrations.AddField(
            model_name='medicationtaskinstance',
            name='medication_task_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.MedicationTaskTemplate'),
        ),
        migrations.AddField(
            model_name='infomessage',
            name='queue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='plans.InfoMessageQueue'),
        ),
        migrations.AddField(
            model_name='careplaninstance',
            name='plan_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plans.CarePlanTemplate'),
        ),
    ]
